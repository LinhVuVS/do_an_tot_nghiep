"use client";

import React, { useState } from "react";
import { Earth } from "lucide-react";
import Link from "next/link";

const FAQ = () => {
    // M·∫£ng c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi, trong ƒë√≥ answer l√† JSX (c√≥ th·ªÉ ch·ª©a c√°c th·∫ª kh√°c nhau)
    const faqData = [
        {
            question: "ƒê∆°n h√†ng c·ªßa t√¥i ƒëang ·ªü ƒë√¢u ?",
            answer: (
                <p>
                    B·∫°n c√≥ th·ªÉ theo d√µi v·ªã tr√≠ ƒë∆°n h√†ng ·ªü{" "}
                    <Link href="/orders" className="text-blue-500 underline">
                        ƒë√¢y
                    </Link>
                    .
                </p>
            ),
        },
        {
            question: "ƒê∆°n h√†ng c√≥ th·ªÉ giao ƒë·∫øn ch·ªó t√¥i kh√¥ng?",
            answer: (
                <div>
                    <p className="font-bold">
                        Ch√∫ng t√¥i c√≥ th·ªÉ giao s·∫£n ph·∫©m ƒë·∫øn t·∫•t c·∫£ c√°c qu·ªëc gia. Vi·ªác v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞·ª£c th·ª±c hi·ªán b·ªüi
                        b√™n chuy·ªÉn ph√°t th·ª© ba.
                    </p>
                    <br />

                    <ul className="">
                        <li className="">üåé V·∫≠n chuy·ªÉn trong n∆∞·ªõc s·∫Ω m·∫•t kho·∫£ng t·ª≠ 1-3 ng√†y</li>
                        <li className="">üåé V·∫≠n chuy·ªÉn ra n∆∞·ªõc ngo√†i s·∫Ω m·∫•t kho·∫£ng 8-12 ng√†y</li>
                    </ul>
                </div>
            ),
        },
        {
            question: "t√¥i c√≥ th·ªÉ tr·∫£ h√†ng ho·∫∑c ƒë·ªïi h√†ng kh√¥ng",
            answer: (
                <div>
                    <p className="font-bold">
                        M·ªçi y√™u c·∫ßu Tr·∫£ h√†ng/ƒê·ªïi h√†ng ph·∫£i ƒë∆∞·ª£c th·ª±c hi·ªán trong v√≤ng 14 ng√†y k·ªÉ t·ª´ Ng√†y giao h√†ng.
                    </p>
                    <br />

                    <p>
                        ƒê∆°n h√†ng ph·∫£i ·ªü t√¨nh tr·∫°ng ban ƒë·∫ßu ch∆∞a qua s·ª≠ d·ª•ng ƒë·ªÉ ƒë·ªß ƒëi·ªÅu ki·ªán ƒë∆∞·ª£c ho√†n l·∫°i ti·ªÅn. ƒê∆°n h√†ng
                        tr·∫£ l·∫°i do l·ªói s·∫£n xu·∫•t, ch√∫ng t√¥i kh√¥ng th·ªÉ ho√†n l·∫°i ti·ªÅn cho chi ph√≠ v·∫≠n chuy·ªÉn ban ƒë·∫ßu c·ªßa
                        b·∫°n. Ch√∫ng t√¥i kh√¥ng ch·ªãu tr√°ch nhi·ªám v·ªÅ chi ph√≠ v·∫≠n chuy·ªÉn ƒë·ªïi/tr·∫£ h√†ng ph√°t sinh.
                    </p>
                </div>
            ),
        },
        {
            question: "H·ªßy ƒë∆°n h√†ng nh∆∞ th·∫ø n√†o?",
            answer: (
                <p>
                    ƒê·ªÉ h·ªßy ƒë∆°n h√†ng, vui l√≤ng g·ª≠i email ƒë·∫øn support@momoko.com, n√™u r√µ h·ªç t√™n ƒë·∫ßy ƒë·ªß, s·ªë ƒë∆°n h√†ng v√† l√Ω
                    do b·∫°n mu·ªën h·ªßy ƒë∆°n h√†ng. Vui l√≤ng xem ch√≠nh s√°ch ho√†n ti·ªÅn c·ªßa ch√∫ng t√¥i t·∫°i ƒë√¢y
                </p>
            ),
        },
    ];

    // State ƒë·ªÉ qu·∫£n l√Ω c√¢u h·ªèi n√†o ƒëang m·ªü
    const [openIndex, setOpenIndex] = useState<number | null>(null);

    // H√†m ƒë·ªÉ m·ªü ho·∫∑c ƒë√≥ng c√¢u h·ªèi
    const toggleAnswer = (index: number) => {
        setOpenIndex((prevIndex) => (prevIndex === index ? null : index));
    };

    return (
        <div className="flex flex-col justify-center items-center my-[50px] mx-[32px] max-sm:mx-[20px]">
            <img src="FAQ.svg" alt="FAQ" />
            <p className="text-[38px] font-bold text-center leading-[43px] mb-5 p-2.5">
                B·∫°n c√≥ c√¢u h·ªèi n√†o li√™n quan ƒë·∫øn s·∫£n ph·∫©m ?
            </p>
            <div className="flex flex-col p-5 max-sm:p-0 w-full">
                {faqData.map((faq, index) => (
                    <div key={index} className="w-full mb-4">
                        {/* C√¢u h·ªèi */}
                        <div
                            className="w-full bg-[#eeeeee] no-underline text-[21px] 
                                        font-medium text-[#12442e] relative cursor-pointer
                                        block mx-0 px-[30px] py-4 rounded-2xl border-[none] transition-all duration-300"
                            onClick={() => toggleAnswer(index)}
                        >
                            {faq.question}
                        </div>

                        {/* C√¢u tr·∫£ l·ªùi - hi·ªáu ·ª©ng tr∆∞·ª£t xu·ªëng */}
                        <div
                            className={`overflow-hidden transition-all duration-500 ${
                                openIndex === index ? "max-h-80 opacity-100" : "max-h-0 opacity-0"
                            }`}
                        >
                            <div className="ml-3 text-[18px] text-[#333] p-2">{faq.answer}</div>
                        </div>
                    </div>
                ))}
            </div>
        </div>
    );
};

export default FAQ;
